Terminals unused in grammar

    DOUBLE
    CHAR
    TRUE
    FALSE
    BREAK
    CONTINUE
    SWITCH
    CASE
    DEFAULT
    DO
    EXTERN


State 171 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decl_list

    2 decl_list: ε
    3          | decl_list declaration

    4 declaration: const_decl
    5            | var_decl
    6            | func_decl

    7 const_decl: CONST type_spec ID ASSIGN const_expr SEMICOLON

    8 var_decl: type_spec var_init_list SEMICOLON

    9 var_init_list: var_init
   10              | var_init_list COMMA var_init

   11 var_init: ID
   12         | ID ASSIGN const_expr
   13         | ID array_dims

   14 func_decl: type_spec ID LPAREN param_list_opt RPAREN block
   15          | VOID ID LPAREN param_list_opt RPAREN block

   16 param_list_opt: ε
   17               | param_list

   18 param_list: param
   19           | param_list COMMA param

   20 param: type_spec ID
   21      | type_spec ID array_dims

   22 block: LBRACE block_items_opt RBRACE

   23 block_items_opt: ε
   24                | block_items

   25 block_items: block_items block_item
   26            | block_item

   27 block_item: declaration
   28           | statement

   29 statement: simple_stmt
   30          | if_stmt
   31          | loop_stmt
   32          | return_stmt
   33          | proc_call SEMICOLON
   34          | block
   35          | error SEMICOLON

   36 simple_stmt: assign_stmt
   37            | PRINT expression SEMICOLON
   38            | PRINTLN expression SEMICOLON
   39            | READ lvalue SEMICOLON
   40            | INC lvalue SEMICOLON
   41            | DEC lvalue SEMICOLON
   42            | SEMICOLON

   43 assign_stmt: lvalue ASSIGN expression SEMICOLON

   44 lvalue: ID
   45       | ID array_ref

   46 if_stmt: IF LPAREN expression RPAREN statement
   47        | IF LPAREN expression RPAREN statement ELSE statement

   48 loop_stmt: WHILE LPAREN expression RPAREN statement
   49          | FOR LPAREN for_start_opt SEMICOLON expression SEMICOLON for_update_opt RPAREN statement
   50          | FOREACH LPAREN ID COLON INT_LIT DOT DOT INT_LIT RPAREN statement

   51 for_start_opt: ε
   52              | assign_no_semi

   53 for_update_opt: ε
   54               | assign_no_semi
   55               | lvalue INC
   56               | lvalue DEC

   57 assign_no_semi: lvalue ASSIGN expression

   58 return_stmt: RETURN expression SEMICOLON

   59 expression: expression PLUS expression
   60           | expression MINUS expression
   61           | expression MUL expression
   62           | expression DIV expression
   63           | expression MOD expression
   64           | expression LT expression
   65           | expression LE expression
   66           | expression GT expression
   67           | expression GE expression
   68           | expression EQ expression
   69           | expression NEQ expression
   70           | expression AND expression
   71           | expression OR expression
   72           | NOT expression
   73           | MINUS expression
   74           | PLUS expression
   75           | LPAREN expression RPAREN
   76           | lvalue
   77           | const_expr
   78           | func_call

   79 const_expr: INT_LIT
   80           | REAL_LIT
   81           | STRING_LIT
   82           | BOOL_LIT

   83 func_call: ID LPAREN arg_list_opt RPAREN

   84 proc_call: ID LPAREN arg_list_opt RPAREN

   85 arg_list_opt: ε
   86             | arg_list

   87 arg_list: expression
   88         | arg_list COMMA expression

   89 array_dims: LBRACK INT_LIT RBRACK
   90           | array_dims LBRACK INT_LIT RBRACK

   91 array_ref: LBRACK expression RBRACK
   92          | array_ref LBRACK expression RBRACK

   93 type_spec: BOOL
   94          | FLOAT
   95          | INT_TOK
   96          | STRING_TOK


Terminals, with rules where they appear

    $end (0) 0
    error (256) 35
    BOOL (258) 93
    FLOAT (259) 94
    DOUBLE (260)
    INT_TOK (261) 95
    CHAR (262)
    STRING_TOK (263) 96
    VOID (264) 15
    IF (265) 46 47
    ELSE (266) 47
    WHILE (267) 48
    FOR (268) 49
    FOREACH (269) 50
    RETURN (270) 58
    CONST (271) 7
    PRINT (272) 37
    PRINTLN (273) 38
    READ (274) 39
    TRUE (275)
    FALSE (276)
    ID <sval> (277) 7 11 12 13 14 15 20 21 44 45 50 83 84
    INT_LIT <ival> (278) 50 79 89 90
    REAL_LIT <fval> (279) 80
    STRING_LIT <sval> (280) 81
    BOOL_LIT (281) 82
    LE (282) 65
    GE (283) 67
    EQ (284) 68
    NEQ (285) 69
    LT (286) 64
    GT (287) 66
    PLUS (288) 59 74
    MINUS (289) 60 73
    MUL (290) 61
    DIV (291) 62
    MOD (292) 63
    ASSIGN (293) 7 12 43 57
    NOT (294) 72
    AND (295) 70
    OR (296) 71
    INC (297) 40 55
    DEC (298) 41 56
    DOT (299) 50
    COMMA (300) 10 19 88
    COLON (301) 50
    SEMICOLON (302) 7 8 33 35 37 38 39 40 41 42 43 49 58
    LPAREN (303) 14 15 46 47 48 49 50 75 83 84
    RPAREN (304) 14 15 46 47 48 49 50 75 83 84
    LBRACK (305) 89 90 91 92
    RBRACK (306) 89 90 91 92
    LBRACE (307) 22
    RBRACE (308) 22
    BREAK (309)
    CONTINUE (310)
    SWITCH (311)
    CASE (312)
    DEFAULT (313)
    DO (314)
    EXTERN (315)
    UPLUS (316)
    UMINUS (317)


Nonterminals, with rules where they appear

    $accept (63)
        on left: 0
    program (64)
        on left: 1
        on right: 0
    decl_list (65)
        on left: 2 3
        on right: 1 3
    declaration (66)
        on left: 4 5 6
        on right: 3 27
    const_decl (67)
        on left: 7
        on right: 4
    var_decl (68)
        on left: 8
        on right: 5
    var_init_list (69)
        on left: 9 10
        on right: 8 10
    var_init (70)
        on left: 11 12 13
        on right: 9 10
    func_decl (71)
        on left: 14 15
        on right: 6
    param_list_opt (72)
        on left: 16 17
        on right: 14 15
    param_list (73)
        on left: 18 19
        on right: 17 19
    param (74)
        on left: 20 21
        on right: 18 19
    block (75)
        on left: 22
        on right: 14 15 34
    block_items_opt (76)
        on left: 23 24
        on right: 22
    block_items (77)
        on left: 25 26
        on right: 24 25
    block_item (78)
        on left: 27 28
        on right: 25 26
    statement (79)
        on left: 29 30 31 32 33 34 35
        on right: 28 46 47 48 49 50
    simple_stmt (80)
        on left: 36 37 38 39 40 41 42
        on right: 29
    assign_stmt (81)
        on left: 43
        on right: 36
    lvalue (82)
        on left: 44 45
        on right: 39 40 41 43 55 56 57 76
    if_stmt (83)
        on left: 46 47
        on right: 30
    loop_stmt (84)
        on left: 48 49 50
        on right: 31
    for_start_opt (85)
        on left: 51 52
        on right: 49
    for_update_opt (86)
        on left: 53 54 55 56
        on right: 49
    assign_no_semi (87)
        on left: 57
        on right: 52 54
    return_stmt (88)
        on left: 58
        on right: 32
    expression (89)
        on left: 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78
        on right: 37 38 43 46 47 48 49 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 87 88 91 92
    const_expr (90)
        on left: 79 80 81 82
        on right: 7 12 77
    func_call (91)
        on left: 83
        on right: 78
    proc_call (92)
        on left: 84
        on right: 33
    arg_list_opt (93)
        on left: 85 86
        on right: 83 84
    arg_list (94)
        on left: 87 88
        on right: 86 88
    array_dims (95)
        on left: 89 90
        on right: 13 21 90
    array_ref (96)
        on left: 91 92
        on right: 45 92
    type_spec (97)
        on left: 93 94 95 96
        on right: 7 8 14 20 21


State 0

    0 $accept: • program $end

    $default  reduce using rule 2 (decl_list)

    program    go to state 1
    decl_list  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: decl_list •
    3 decl_list: decl_list • declaration

    BOOL        shift, and go to state 4
    FLOAT       shift, and go to state 5
    INT_TOK     shift, and go to state 6
    STRING_TOK  shift, and go to state 7
    VOID        shift, and go to state 8
    CONST       shift, and go to state 9

    $default  reduce using rule 1 (program)

    declaration  go to state 10
    const_decl   go to state 11
    var_decl     go to state 12
    func_decl    go to state 13
    type_spec    go to state 14


State 3

    0 $accept: program $end •

    $default  accept


State 4

   93 type_spec: BOOL •

    $default  reduce using rule 93 (type_spec)


State 5

   94 type_spec: FLOAT •

    $default  reduce using rule 94 (type_spec)


State 6

   95 type_spec: INT_TOK •

    $default  reduce using rule 95 (type_spec)


State 7

   96 type_spec: STRING_TOK •

    $default  reduce using rule 96 (type_spec)


State 8

   15 func_decl: VOID • ID LPAREN param_list_opt RPAREN block

    ID  shift, and go to state 15


State 9

    7 const_decl: CONST • type_spec ID ASSIGN const_expr SEMICOLON

    BOOL        shift, and go to state 4
    FLOAT       shift, and go to state 5
    INT_TOK     shift, and go to state 6
    STRING_TOK  shift, and go to state 7

    type_spec  go to state 16


State 10

    3 decl_list: decl_list declaration •

    $default  reduce using rule 3 (decl_list)


State 11

    4 declaration: const_decl •

    $default  reduce using rule 4 (declaration)


State 12

    5 declaration: var_decl •

    $default  reduce using rule 5 (declaration)


State 13

    6 declaration: func_decl •

    $default  reduce using rule 6 (declaration)


State 14

    8 var_decl: type_spec • var_init_list SEMICOLON
   14 func_decl: type_spec • ID LPAREN param_list_opt RPAREN block

    ID  shift, and go to state 17

    var_init_list  go to state 18
    var_init       go to state 19


State 15

   15 func_decl: VOID ID • LPAREN param_list_opt RPAREN block

    LPAREN  shift, and go to state 20


State 16

    7 const_decl: CONST type_spec • ID ASSIGN const_expr SEMICOLON

    ID  shift, and go to state 21


State 17

   11 var_init: ID •
   12         | ID • ASSIGN const_expr
   13         | ID • array_dims
   14 func_decl: type_spec ID • LPAREN param_list_opt RPAREN block

    ASSIGN  shift, and go to state 22
    LPAREN  shift, and go to state 23
    LBRACK  shift, and go to state 24

    $default  reduce using rule 11 (var_init)

    array_dims  go to state 25


State 18

    8 var_decl: type_spec var_init_list • SEMICOLON
   10 var_init_list: var_init_list • COMMA var_init

    COMMA      shift, and go to state 26
    SEMICOLON  shift, and go to state 27


State 19

    9 var_init_list: var_init •

    $default  reduce using rule 9 (var_init_list)


State 20

   15 func_decl: VOID ID LPAREN • param_list_opt RPAREN block

    BOOL        shift, and go to state 4
    FLOAT       shift, and go to state 5
    INT_TOK     shift, and go to state 6
    STRING_TOK  shift, and go to state 7

    $default  reduce using rule 16 (param_list_opt)

    param_list_opt  go to state 28
    param_list      go to state 29
    param           go to state 30
    type_spec       go to state 31


State 21

    7 const_decl: CONST type_spec ID • ASSIGN const_expr SEMICOLON

    ASSIGN  shift, and go to state 32


State 22

   12 var_init: ID ASSIGN • const_expr

    INT_LIT     shift, and go to state 33
    REAL_LIT    shift, and go to state 34
    STRING_LIT  shift, and go to state 35
    BOOL_LIT    shift, and go to state 36

    const_expr  go to state 37


State 23

   14 func_decl: type_spec ID LPAREN • param_list_opt RPAREN block

    BOOL        shift, and go to state 4
    FLOAT       shift, and go to state 5
    INT_TOK     shift, and go to state 6
    STRING_TOK  shift, and go to state 7

    $default  reduce using rule 16 (param_list_opt)

    param_list_opt  go to state 38
    param_list      go to state 29
    param           go to state 30
    type_spec       go to state 31


State 24

   89 array_dims: LBRACK • INT_LIT RBRACK

    INT_LIT  shift, and go to state 39


State 25

   13 var_init: ID array_dims •
   90 array_dims: array_dims • LBRACK INT_LIT RBRACK

    LBRACK  shift, and go to state 40

    $default  reduce using rule 13 (var_init)


State 26

   10 var_init_list: var_init_list COMMA • var_init

    ID  shift, and go to state 41

    var_init  go to state 42


State 27

    8 var_decl: type_spec var_init_list SEMICOLON •

    $default  reduce using rule 8 (var_decl)


State 28

   15 func_decl: VOID ID LPAREN param_list_opt • RPAREN block

    RPAREN  shift, and go to state 43


State 29

   17 param_list_opt: param_list •
   19 param_list: param_list • COMMA param

    COMMA  shift, and go to state 44

    $default  reduce using rule 17 (param_list_opt)


State 30

   18 param_list: param •

    $default  reduce using rule 18 (param_list)


State 31

   20 param: type_spec • ID
   21      | type_spec • ID array_dims

    ID  shift, and go to state 45


State 32

    7 const_decl: CONST type_spec ID ASSIGN • const_expr SEMICOLON

    INT_LIT     shift, and go to state 33
    REAL_LIT    shift, and go to state 34
    STRING_LIT  shift, and go to state 35
    BOOL_LIT    shift, and go to state 36

    const_expr  go to state 46


State 33

   79 const_expr: INT_LIT •

    $default  reduce using rule 79 (const_expr)


State 34

   80 const_expr: REAL_LIT •

    $default  reduce using rule 80 (const_expr)


State 35

   81 const_expr: STRING_LIT •

    $default  reduce using rule 81 (const_expr)


State 36

   82 const_expr: BOOL_LIT •

    $default  reduce using rule 82 (const_expr)


State 37

   12 var_init: ID ASSIGN const_expr •

    $default  reduce using rule 12 (var_init)


State 38

   14 func_decl: type_spec ID LPAREN param_list_opt • RPAREN block

    RPAREN  shift, and go to state 47


State 39

   89 array_dims: LBRACK INT_LIT • RBRACK

    RBRACK  shift, and go to state 48


State 40

   90 array_dims: array_dims LBRACK • INT_LIT RBRACK

    INT_LIT  shift, and go to state 49


State 41

   11 var_init: ID •
   12         | ID • ASSIGN const_expr
   13         | ID • array_dims

    ASSIGN  shift, and go to state 22
    LBRACK  shift, and go to state 24

    $default  reduce using rule 11 (var_init)

    array_dims  go to state 25


State 42

   10 var_init_list: var_init_list COMMA var_init •

    $default  reduce using rule 10 (var_init_list)


State 43

   15 func_decl: VOID ID LPAREN param_list_opt RPAREN • block

    LBRACE  shift, and go to state 50

    block  go to state 51


State 44

   19 param_list: param_list COMMA • param

    BOOL        shift, and go to state 4
    FLOAT       shift, and go to state 5
    INT_TOK     shift, and go to state 6
    STRING_TOK  shift, and go to state 7

    param      go to state 52
    type_spec  go to state 31


State 45

   20 param: type_spec ID •
   21      | type_spec ID • array_dims

    LBRACK  shift, and go to state 24

    $default  reduce using rule 20 (param)

    array_dims  go to state 53


State 46

    7 const_decl: CONST type_spec ID ASSIGN const_expr • SEMICOLON

    SEMICOLON  shift, and go to state 54


State 47

   14 func_decl: type_spec ID LPAREN param_list_opt RPAREN • block

    LBRACE  shift, and go to state 50

    block  go to state 55


State 48

   89 array_dims: LBRACK INT_LIT RBRACK •

    $default  reduce using rule 89 (array_dims)


State 49

   90 array_dims: array_dims LBRACK INT_LIT • RBRACK

    RBRACK  shift, and go to state 56


State 50

   22 block: LBRACE • block_items_opt RBRACE

    error       shift, and go to state 57
    BOOL        shift, and go to state 4
    FLOAT       shift, and go to state 5
    INT_TOK     shift, and go to state 6
    STRING_TOK  shift, and go to state 7
    VOID        shift, and go to state 8
    IF          shift, and go to state 58
    WHILE       shift, and go to state 59
    FOR         shift, and go to state 60
    FOREACH     shift, and go to state 61
    RETURN      shift, and go to state 62
    CONST       shift, and go to state 9
    PRINT       shift, and go to state 63
    PRINTLN     shift, and go to state 64
    READ        shift, and go to state 65
    ID          shift, and go to state 66
    INC         shift, and go to state 67
    DEC         shift, and go to state 68
    SEMICOLON   shift, and go to state 69
    LBRACE      shift, and go to state 50

    RBRACE  reduce using rule 23 (block_items_opt)

    declaration      go to state 70
    const_decl       go to state 11
    var_decl         go to state 12
    func_decl        go to state 13
    block            go to state 71
    block_items_opt  go to state 72
    block_items      go to state 73
    block_item       go to state 74
    statement        go to state 75
    simple_stmt      go to state 76
    assign_stmt      go to state 77
    lvalue           go to state 78
    if_stmt          go to state 79
    loop_stmt        go to state 80
    return_stmt      go to state 81
    proc_call        go to state 82
    type_spec        go to state 14


State 51

   15 func_decl: VOID ID LPAREN param_list_opt RPAREN block •

    $default  reduce using rule 15 (func_decl)


State 52

   19 param_list: param_list COMMA param •

    $default  reduce using rule 19 (param_list)


State 53

   21 param: type_spec ID array_dims •
   90 array_dims: array_dims • LBRACK INT_LIT RBRACK

    LBRACK  shift, and go to state 40

    $default  reduce using rule 21 (param)


State 54

    7 const_decl: CONST type_spec ID ASSIGN const_expr SEMICOLON •

    $default  reduce using rule 7 (const_decl)


State 55

   14 func_decl: type_spec ID LPAREN param_list_opt RPAREN block •

    $default  reduce using rule 14 (func_decl)


State 56

   90 array_dims: array_dims LBRACK INT_LIT RBRACK •

    $default  reduce using rule 90 (array_dims)


State 57

   35 statement: error • SEMICOLON

    SEMICOLON  shift, and go to state 83


State 58

   46 if_stmt: IF • LPAREN expression RPAREN statement
   47        | IF • LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 84


State 59

   48 loop_stmt: WHILE • LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 85


State 60

   49 loop_stmt: FOR • LPAREN for_start_opt SEMICOLON expression SEMICOLON for_update_opt RPAREN statement

    LPAREN  shift, and go to state 86


State 61

   50 loop_stmt: FOREACH • LPAREN ID COLON INT_LIT DOT DOT INT_LIT RPAREN statement

    LPAREN  shift, and go to state 87


State 62

   58 return_stmt: RETURN • expression SEMICOLON

    ID          shift, and go to state 88
    INT_LIT     shift, and go to state 33
    REAL_LIT    shift, and go to state 34
    STRING_LIT  shift, and go to state 35
    BOOL_LIT    shift, and go to state 36
    PLUS        shift, and go to state 89
    MINUS       shift, and go to state 90
    NOT         shift, and go to state 91
    LPAREN      shift, and go to state 92

    lvalue      go to state 93
    expression  go to state 94
    const_expr  go to state 95
    func_call   go to state 96


State 63

   37 simple_stmt: PRINT • expression SEMICOLON

    ID          shift, and go to state 88
    INT_LIT     shift, and go to state 33
    REAL_LIT    shift, and go to state 34
    STRING_LIT  shift, and go to state 35
    BOOL_LIT    shift, and go to state 36
    PLUS        shift, and go to state 89
    MINUS       shift, and go to state 90
    NOT         shift, and go to state 91
    LPAREN      shift, and go to state 92

    lvalue      go to state 93
    expression  go to state 97
    const_expr  go to state 95
    func_call   go to state 96


State 64

   38 simple_stmt: PRINTLN • expression SEMICOLON

    ID          shift, and go to state 88
    INT_LIT     shift, and go to state 33
    REAL_LIT    shift, and go to state 34
    STRING_LIT  shift, and go to state 35
    BOOL_LIT    shift, and go to state 36
    PLUS        shift, and go to state 89
    MINUS       shift, and go to state 90
    NOT         shift, and go to state 91
    LPAREN      shift, and go to state 92

    lvalue      go to state 93
    expression  go to state 98
    const_expr  go to state 95
    func_call   go to state 96


State 65

   39 simple_stmt: READ • lvalue SEMICOLON

    ID  shift, and go to state 99

    lvalue  go to state 100


State 66

   44 lvalue: ID •
   45       | ID • array_ref
   84 proc_call: ID • LPAREN arg_list_opt RPAREN

    LPAREN  shift, and go to state 101
    LBRACK  shift, and go to state 102

    $default  reduce using rule 44 (lvalue)

    array_ref  go to state 103


State 67

   40 simple_stmt: INC • lvalue SEMICOLON

    ID  shift, and go to state 99

    lvalue  go to state 104


State 68

   41 simple_stmt: DEC • lvalue SEMICOLON

    ID  shift, and go to state 99

    lvalue  go to state 105


State 69

   42 simple_stmt: SEMICOLON •

    $default  reduce using rule 42 (simple_stmt)


State 70

   27 block_item: declaration •

    $default  reduce using rule 27 (block_item)


State 71

   34 statement: block •

    $default  reduce using rule 34 (statement)


State 72

   22 block: LBRACE block_items_opt • RBRACE

    RBRACE  shift, and go to state 106


State 73

   24 block_items_opt: block_items •
   25 block_items: block_items • block_item

    error       shift, and go to state 57
    BOOL        shift, and go to state 4
    FLOAT       shift, and go to state 5
    INT_TOK     shift, and go to state 6
    STRING_TOK  shift, and go to state 7
    VOID        shift, and go to state 8
    IF          shift, and go to state 58
    WHILE       shift, and go to state 59
    FOR         shift, and go to state 60
    FOREACH     shift, and go to state 61
    RETURN      shift, and go to state 62
    CONST       shift, and go to state 9
    PRINT       shift, and go to state 63
    PRINTLN     shift, and go to state 64
    READ        shift, and go to state 65
    ID          shift, and go to state 66
    INC         shift, and go to state 67
    DEC         shift, and go to state 68
    SEMICOLON   shift, and go to state 69
    LBRACE      shift, and go to state 50

    RBRACE  reduce using rule 24 (block_items_opt)

    declaration  go to state 70
    const_decl   go to state 11
    var_decl     go to state 12
    func_decl    go to state 13
    block        go to state 71
    block_item   go to state 107
    statement    go to state 75
    simple_stmt  go to state 76
    assign_stmt  go to state 77
    lvalue       go to state 78
    if_stmt      go to state 79
    loop_stmt    go to state 80
    return_stmt  go to state 81
    proc_call    go to state 82
    type_spec    go to state 14


State 74

   26 block_items: block_item •

    $default  reduce using rule 26 (block_items)


State 75

   28 block_item: statement •

    $default  reduce using rule 28 (block_item)


State 76

   29 statement: simple_stmt •

    $default  reduce using rule 29 (statement)


State 77

   36 simple_stmt: assign_stmt •

    $default  reduce using rule 36 (simple_stmt)


State 78

   43 assign_stmt: lvalue • ASSIGN expression SEMICOLON

    ASSIGN  shift, and go to state 108


State 79

   30 statement: if_stmt •

    $default  reduce using rule 30 (statement)


State 80

   31 statement: loop_stmt •

    $default  reduce using rule 31 (statement)


State 81

   32 statement: return_stmt •

    $default  reduce using rule 32 (statement)


State 82

   33 statement: proc_call • SEMICOLON

    SEMICOLON  shift, and go to state 109


State 83

   35 statement: error SEMICOLON •

    $default  reduce using rule 35 (statement)


State 84

   46 if_stmt: IF LPAREN • expression RPAREN statement
   47        | IF LPAREN • expression RPAREN statement ELSE statement

    ID          shift, and go to state 88
    INT_LIT     shift, and go to state 33
    REAL_LIT    shift, and go to state 34
    STRING_LIT  shift, and go to state 35
    BOOL_LIT    shift, and go to state 36
    PLUS        shift, and go to state 89
    MINUS       shift, and go to state 90
    NOT         shift, and go to state 91
    LPAREN      shift, and go to state 92

    lvalue      go to state 93
    expression  go to state 110
    const_expr  go to state 95
    func_call   go to state 96


State 85

   48 loop_stmt: WHILE LPAREN • expression RPAREN statement

    ID          shift, and go to state 88
    INT_LIT     shift, and go to state 33
    REAL_LIT    shift, and go to state 34
    STRING_LIT  shift, and go to state 35
    BOOL_LIT    shift, and go to state 36
    PLUS        shift, and go to state 89
    MINUS       shift, and go to state 90
    NOT         shift, and go to state 91
    LPAREN      shift, and go to state 92

    lvalue      go to state 93
    expression  go to state 111
    const_expr  go to state 95
    func_call   go to state 96


State 86

   49 loop_stmt: FOR LPAREN • for_start_opt SEMICOLON expression SEMICOLON for_update_opt RPAREN statement

    ID  shift, and go to state 99

    $default  reduce using rule 51 (for_start_opt)

    lvalue          go to state 112
    for_start_opt   go to state 113
    assign_no_semi  go to state 114


State 87

   50 loop_stmt: FOREACH LPAREN • ID COLON INT_LIT DOT DOT INT_LIT RPAREN statement

    ID  shift, and go to state 115


State 88

   44 lvalue: ID •
   45       | ID • array_ref
   83 func_call: ID • LPAREN arg_list_opt RPAREN

    LPAREN  shift, and go to state 116
    LBRACK  shift, and go to state 102

    $default  reduce using rule 44 (lvalue)

    array_ref  go to state 103


State 89

   74 expression: PLUS • expression

    ID          shift, and go to state 88
    INT_LIT     shift, and go to state 33
    REAL_LIT    shift, and go to state 34
    STRING_LIT  shift, and go to state 35
    BOOL_LIT    shift, and go to state 36
    PLUS        shift, and go to state 89
    MINUS       shift, and go to state 90
    NOT         shift, and go to state 91
    LPAREN      shift, and go to state 92

    lvalue      go to state 93
    expression  go to state 117
    const_expr  go to state 95
    func_call   go to state 96


State 90

   73 expression: MINUS • expression

    ID          shift, and go to state 88
    INT_LIT     shift, and go to state 33
    REAL_LIT    shift, and go to state 34
    STRING_LIT  shift, and go to state 35
    BOOL_LIT    shift, and go to state 36
    PLUS        shift, and go to state 89
    MINUS       shift, and go to state 90
    NOT         shift, and go to state 91
    LPAREN      shift, and go to state 92

    lvalue      go to state 93
    expression  go to state 118
    const_expr  go to state 95
    func_call   go to state 96


State 91

   72 expression: NOT • expression

    ID          shift, and go to state 88
    INT_LIT     shift, and go to state 33
    REAL_LIT    shift, and go to state 34
    STRING_LIT  shift, and go to state 35
    BOOL_LIT    shift, and go to state 36
    PLUS        shift, and go to state 89
    MINUS       shift, and go to state 90
    NOT         shift, and go to state 91
    LPAREN      shift, and go to state 92

    lvalue      go to state 93
    expression  go to state 119
    const_expr  go to state 95
    func_call   go to state 96


State 92

   75 expression: LPAREN • expression RPAREN

    ID          shift, and go to state 88
    INT_LIT     shift, and go to state 33
    REAL_LIT    shift, and go to state 34
    STRING_LIT  shift, and go to state 35
    BOOL_LIT    shift, and go to state 36
    PLUS        shift, and go to state 89
    MINUS       shift, and go to state 90
    NOT         shift, and go to state 91
    LPAREN      shift, and go to state 92

    lvalue      go to state 93
    expression  go to state 120
    const_expr  go to state 95
    func_call   go to state 96


State 93

   76 expression: lvalue •

    $default  reduce using rule 76 (expression)


State 94

   58 return_stmt: RETURN expression • SEMICOLON
   59 expression: expression • PLUS expression
   60           | expression • MINUS expression
   61           | expression • MUL expression
   62           | expression • DIV expression
   63           | expression • MOD expression
   64           | expression • LT expression
   65           | expression • LE expression
   66           | expression • GT expression
   67           | expression • GE expression
   68           | expression • EQ expression
   69           | expression • NEQ expression
   70           | expression • AND expression
   71           | expression • OR expression

    LE         shift, and go to state 121
    GE         shift, and go to state 122
    EQ         shift, and go to state 123
    NEQ        shift, and go to state 124
    LT         shift, and go to state 125
    GT         shift, and go to state 126
    PLUS       shift, and go to state 127
    MINUS      shift, and go to state 128
    MUL        shift, and go to state 129
    DIV        shift, and go to state 130
    MOD        shift, and go to state 131
    AND        shift, and go to state 132
    OR         shift, and go to state 133
    SEMICOLON  shift, and go to state 134


State 95

   77 expression: const_expr •

    $default  reduce using rule 77 (expression)


State 96

   78 expression: func_call •

    $default  reduce using rule 78 (expression)


State 97

   37 simple_stmt: PRINT expression • SEMICOLON
   59 expression: expression • PLUS expression
   60           | expression • MINUS expression
   61           | expression • MUL expression
   62           | expression • DIV expression
   63           | expression • MOD expression
   64           | expression • LT expression
   65           | expression • LE expression
   66           | expression • GT expression
   67           | expression • GE expression
   68           | expression • EQ expression
   69           | expression • NEQ expression
   70           | expression • AND expression
   71           | expression • OR expression

    LE         shift, and go to state 121
    GE         shift, and go to state 122
    EQ         shift, and go to state 123
    NEQ        shift, and go to state 124
    LT         shift, and go to state 125
    GT         shift, and go to state 126
    PLUS       shift, and go to state 127
    MINUS      shift, and go to state 128
    MUL        shift, and go to state 129
    DIV        shift, and go to state 130
    MOD        shift, and go to state 131
    AND        shift, and go to state 132
    OR         shift, and go to state 133
    SEMICOLON  shift, and go to state 135


State 98

   38 simple_stmt: PRINTLN expression • SEMICOLON
   59 expression: expression • PLUS expression
   60           | expression • MINUS expression
   61           | expression • MUL expression
   62           | expression • DIV expression
   63           | expression • MOD expression
   64           | expression • LT expression
   65           | expression • LE expression
   66           | expression • GT expression
   67           | expression • GE expression
   68           | expression • EQ expression
   69           | expression • NEQ expression
   70           | expression • AND expression
   71           | expression • OR expression

    LE         shift, and go to state 121
    GE         shift, and go to state 122
    EQ         shift, and go to state 123
    NEQ        shift, and go to state 124
    LT         shift, and go to state 125
    GT         shift, and go to state 126
    PLUS       shift, and go to state 127
    MINUS      shift, and go to state 128
    MUL        shift, and go to state 129
    DIV        shift, and go to state 130
    MOD        shift, and go to state 131
    AND        shift, and go to state 132
    OR         shift, and go to state 133
    SEMICOLON  shift, and go to state 136


State 99

   44 lvalue: ID •
   45       | ID • array_ref

    LBRACK  shift, and go to state 102

    $default  reduce using rule 44 (lvalue)

    array_ref  go to state 103


State 100

   39 simple_stmt: READ lvalue • SEMICOLON

    SEMICOLON  shift, and go to state 137


State 101

   84 proc_call: ID LPAREN • arg_list_opt RPAREN

    ID          shift, and go to state 88
    INT_LIT     shift, and go to state 33
    REAL_LIT    shift, and go to state 34
    STRING_LIT  shift, and go to state 35
    BOOL_LIT    shift, and go to state 36
    PLUS        shift, and go to state 89
    MINUS       shift, and go to state 90
    NOT         shift, and go to state 91
    LPAREN      shift, and go to state 92

    $default  reduce using rule 85 (arg_list_opt)

    lvalue        go to state 93
    expression    go to state 138
    const_expr    go to state 95
    func_call     go to state 96
    arg_list_opt  go to state 139
    arg_list      go to state 140


State 102

   91 array_ref: LBRACK • expression RBRACK

    ID          shift, and go to state 88
    INT_LIT     shift, and go to state 33
    REAL_LIT    shift, and go to state 34
    STRING_LIT  shift, and go to state 35
    BOOL_LIT    shift, and go to state 36
    PLUS        shift, and go to state 89
    MINUS       shift, and go to state 90
    NOT         shift, and go to state 91
    LPAREN      shift, and go to state 92

    lvalue      go to state 93
    expression  go to state 141
    const_expr  go to state 95
    func_call   go to state 96


State 103

   45 lvalue: ID array_ref •
   92 array_ref: array_ref • LBRACK expression RBRACK

    LBRACK  shift, and go to state 142

    $default  reduce using rule 45 (lvalue)


State 104

   40 simple_stmt: INC lvalue • SEMICOLON

    SEMICOLON  shift, and go to state 143


State 105

   41 simple_stmt: DEC lvalue • SEMICOLON

    SEMICOLON  shift, and go to state 144


State 106

   22 block: LBRACE block_items_opt RBRACE •

    $default  reduce using rule 22 (block)


State 107

   25 block_items: block_items block_item •

    $default  reduce using rule 25 (block_items)


State 108

   43 assign_stmt: lvalue ASSIGN • expression SEMICOLON

    ID          shift, and go to state 88
    INT_LIT     shift, and go to state 33
    REAL_LIT    shift, and go to state 34
    STRING_LIT  shift, and go to state 35
    BOOL_LIT    shift, and go to state 36
    PLUS        shift, and go to state 89
    MINUS       shift, and go to state 90
    NOT         shift, and go to state 91
    LPAREN      shift, and go to state 92

    lvalue      go to state 93
    expression  go to state 145
    const_expr  go to state 95
    func_call   go to state 96


State 109

   33 statement: proc_call SEMICOLON •

    $default  reduce using rule 33 (statement)


State 110

   46 if_stmt: IF LPAREN expression • RPAREN statement
   47        | IF LPAREN expression • RPAREN statement ELSE statement
   59 expression: expression • PLUS expression
   60           | expression • MINUS expression
   61           | expression • MUL expression
   62           | expression • DIV expression
   63           | expression • MOD expression
   64           | expression • LT expression
   65           | expression • LE expression
   66           | expression • GT expression
   67           | expression • GE expression
   68           | expression • EQ expression
   69           | expression • NEQ expression
   70           | expression • AND expression
   71           | expression • OR expression

    LE      shift, and go to state 121
    GE      shift, and go to state 122
    EQ      shift, and go to state 123
    NEQ     shift, and go to state 124
    LT      shift, and go to state 125
    GT      shift, and go to state 126
    PLUS    shift, and go to state 127
    MINUS   shift, and go to state 128
    MUL     shift, and go to state 129
    DIV     shift, and go to state 130
    MOD     shift, and go to state 131
    AND     shift, and go to state 132
    OR      shift, and go to state 133
    RPAREN  shift, and go to state 146


State 111

   48 loop_stmt: WHILE LPAREN expression • RPAREN statement
   59 expression: expression • PLUS expression
   60           | expression • MINUS expression
   61           | expression • MUL expression
   62           | expression • DIV expression
   63           | expression • MOD expression
   64           | expression • LT expression
   65           | expression • LE expression
   66           | expression • GT expression
   67           | expression • GE expression
   68           | expression • EQ expression
   69           | expression • NEQ expression
   70           | expression • AND expression
   71           | expression • OR expression

    LE      shift, and go to state 121
    GE      shift, and go to state 122
    EQ      shift, and go to state 123
    NEQ     shift, and go to state 124
    LT      shift, and go to state 125
    GT      shift, and go to state 126
    PLUS    shift, and go to state 127
    MINUS   shift, and go to state 128
    MUL     shift, and go to state 129
    DIV     shift, and go to state 130
    MOD     shift, and go to state 131
    AND     shift, and go to state 132
    OR      shift, and go to state 133
    RPAREN  shift, and go to state 147


State 112

   57 assign_no_semi: lvalue • ASSIGN expression

    ASSIGN  shift, and go to state 148


State 113

   49 loop_stmt: FOR LPAREN for_start_opt • SEMICOLON expression SEMICOLON for_update_opt RPAREN statement

    SEMICOLON  shift, and go to state 149


State 114

   52 for_start_opt: assign_no_semi •

    $default  reduce using rule 52 (for_start_opt)


State 115

   50 loop_stmt: FOREACH LPAREN ID • COLON INT_LIT DOT DOT INT_LIT RPAREN statement

    COLON  shift, and go to state 150


State 116

   83 func_call: ID LPAREN • arg_list_opt RPAREN

    ID          shift, and go to state 88
    INT_LIT     shift, and go to state 33
    REAL_LIT    shift, and go to state 34
    STRING_LIT  shift, and go to state 35
    BOOL_LIT    shift, and go to state 36
    PLUS        shift, and go to state 89
    MINUS       shift, and go to state 90
    NOT         shift, and go to state 91
    LPAREN      shift, and go to state 92

    $default  reduce using rule 85 (arg_list_opt)

    lvalue        go to state 93
    expression    go to state 138
    const_expr    go to state 95
    func_call     go to state 96
    arg_list_opt  go to state 151
    arg_list      go to state 140


State 117

   59 expression: expression • PLUS expression
   60           | expression • MINUS expression
   61           | expression • MUL expression
   62           | expression • DIV expression
   63           | expression • MOD expression
   64           | expression • LT expression
   65           | expression • LE expression
   66           | expression • GT expression
   67           | expression • GE expression
   68           | expression • EQ expression
   69           | expression • NEQ expression
   70           | expression • AND expression
   71           | expression • OR expression
   74           | PLUS expression •

    LE     shift, and go to state 121
    GE     shift, and go to state 122
    EQ     shift, and go to state 123
    NEQ    shift, and go to state 124
    LT     shift, and go to state 125
    GT     shift, and go to state 126
    PLUS   shift, and go to state 127
    MINUS  shift, and go to state 128
    MUL    shift, and go to state 129
    DIV    shift, and go to state 130
    MOD    shift, and go to state 131
    AND    shift, and go to state 132
    OR     shift, and go to state 133

    $default  reduce using rule 74 (expression)


State 118

   59 expression: expression • PLUS expression
   60           | expression • MINUS expression
   61           | expression • MUL expression
   62           | expression • DIV expression
   63           | expression • MOD expression
   64           | expression • LT expression
   65           | expression • LE expression
   66           | expression • GT expression
   67           | expression • GE expression
   68           | expression • EQ expression
   69           | expression • NEQ expression
   70           | expression • AND expression
   71           | expression • OR expression
   73           | MINUS expression •

    LE     shift, and go to state 121
    GE     shift, and go to state 122
    EQ     shift, and go to state 123
    NEQ    shift, and go to state 124
    LT     shift, and go to state 125
    GT     shift, and go to state 126
    PLUS   shift, and go to state 127
    MINUS  shift, and go to state 128
    MUL    shift, and go to state 129
    DIV    shift, and go to state 130
    MOD    shift, and go to state 131
    AND    shift, and go to state 132
    OR     shift, and go to state 133

    $default  reduce using rule 73 (expression)


State 119

   59 expression: expression • PLUS expression
   60           | expression • MINUS expression
   61           | expression • MUL expression
   62           | expression • DIV expression
   63           | expression • MOD expression
   64           | expression • LT expression
   65           | expression • LE expression
   66           | expression • GT expression
   67           | expression • GE expression
   68           | expression • EQ expression
   69           | expression • NEQ expression
   70           | expression • AND expression
   71           | expression • OR expression
   72           | NOT expression •

    LE     shift, and go to state 121
    GE     shift, and go to state 122
    EQ     shift, and go to state 123
    NEQ    shift, and go to state 124
    LT     shift, and go to state 125
    GT     shift, and go to state 126
    PLUS   shift, and go to state 127
    MINUS  shift, and go to state 128
    MUL    shift, and go to state 129
    DIV    shift, and go to state 130
    MOD    shift, and go to state 131
    AND    shift, and go to state 132
    OR     shift, and go to state 133

    $default  reduce using rule 72 (expression)


State 120

   59 expression: expression • PLUS expression
   60           | expression • MINUS expression
   61           | expression • MUL expression
   62           | expression • DIV expression
   63           | expression • MOD expression
   64           | expression • LT expression
   65           | expression • LE expression
   66           | expression • GT expression
   67           | expression • GE expression
   68           | expression • EQ expression
   69           | expression • NEQ expression
   70           | expression • AND expression
   71           | expression • OR expression
   75           | LPAREN expression • RPAREN

    LE      shift, and go to state 121
    GE      shift, and go to state 122
    EQ      shift, and go to state 123
    NEQ     shift, and go to state 124
    LT      shift, and go to state 125
    GT      shift, and go to state 126
    PLUS    shift, and go to state 127
    MINUS   shift, and go to state 128
    MUL     shift, and go to state 129
    DIV     shift, and go to state 130
    MOD     shift, and go to state 131
    AND     shift, and go to state 132
    OR      shift, and go to state 133
    RPAREN  shift, and go to state 152


State 121

   65 expression: expression LE • expression

    ID          shift, and go to state 88
    INT_LIT     shift, and go to state 33
    REAL_LIT    shift, and go to state 34
    STRING_LIT  shift, and go to state 35
    BOOL_LIT    shift, and go to state 36
    PLUS        shift, and go to state 89
    MINUS       shift, and go to state 90
    NOT         shift, and go to state 91
    LPAREN      shift, and go to state 92

    lvalue      go to state 93
    expression  go to state 153
    const_expr  go to state 95
    func_call   go to state 96


State 122

   67 expression: expression GE • expression

    ID          shift, and go to state 88
    INT_LIT     shift, and go to state 33
    REAL_LIT    shift, and go to state 34
    STRING_LIT  shift, and go to state 35
    BOOL_LIT    shift, and go to state 36
    PLUS        shift, and go to state 89
    MINUS       shift, and go to state 90
    NOT         shift, and go to state 91
    LPAREN      shift, and go to state 92

    lvalue      go to state 93
    expression  go to state 154
    const_expr  go to state 95
    func_call   go to state 96


State 123

   68 expression: expression EQ • expression

    ID          shift, and go to state 88
    INT_LIT     shift, and go to state 33
    REAL_LIT    shift, and go to state 34
    STRING_LIT  shift, and go to state 35
    BOOL_LIT    shift, and go to state 36
    PLUS        shift, and go to state 89
    MINUS       shift, and go to state 90
    NOT         shift, and go to state 91
    LPAREN      shift, and go to state 92

    lvalue      go to state 93
    expression  go to state 155
    const_expr  go to state 95
    func_call   go to state 96


State 124

   69 expression: expression NEQ • expression

    ID          shift, and go to state 88
    INT_LIT     shift, and go to state 33
    REAL_LIT    shift, and go to state 34
    STRING_LIT  shift, and go to state 35
    BOOL_LIT    shift, and go to state 36
    PLUS        shift, and go to state 89
    MINUS       shift, and go to state 90
    NOT         shift, and go to state 91
    LPAREN      shift, and go to state 92

    lvalue      go to state 93
    expression  go to state 156
    const_expr  go to state 95
    func_call   go to state 96


State 125

   64 expression: expression LT • expression

    ID          shift, and go to state 88
    INT_LIT     shift, and go to state 33
    REAL_LIT    shift, and go to state 34
    STRING_LIT  shift, and go to state 35
    BOOL_LIT    shift, and go to state 36
    PLUS        shift, and go to state 89
    MINUS       shift, and go to state 90
    NOT         shift, and go to state 91
    LPAREN      shift, and go to state 92

    lvalue      go to state 93
    expression  go to state 157
    const_expr  go to state 95
    func_call   go to state 96


State 126

   66 expression: expression GT • expression

    ID          shift, and go to state 88
    INT_LIT     shift, and go to state 33
    REAL_LIT    shift, and go to state 34
    STRING_LIT  shift, and go to state 35
    BOOL_LIT    shift, and go to state 36
    PLUS        shift, and go to state 89
    MINUS       shift, and go to state 90
    NOT         shift, and go to state 91
    LPAREN      shift, and go to state 92

    lvalue      go to state 93
    expression  go to state 158
    const_expr  go to state 95
    func_call   go to state 96


State 127

   59 expression: expression PLUS • expression

    ID          shift, and go to state 88
    INT_LIT     shift, and go to state 33
    REAL_LIT    shift, and go to state 34
    STRING_LIT  shift, and go to state 35
    BOOL_LIT    shift, and go to state 36
    PLUS        shift, and go to state 89
    MINUS       shift, and go to state 90
    NOT         shift, and go to state 91
    LPAREN      shift, and go to state 92

    lvalue      go to state 93
    expression  go to state 159
    const_expr  go to state 95
    func_call   go to state 96


State 128

   60 expression: expression MINUS • expression

    ID          shift, and go to state 88
    INT_LIT     shift, and go to state 33
    REAL_LIT    shift, and go to state 34
    STRING_LIT  shift, and go to state 35
    BOOL_LIT    shift, and go to state 36
    PLUS        shift, and go to state 89
    MINUS       shift, and go to state 90
    NOT         shift, and go to state 91
    LPAREN      shift, and go to state 92

    lvalue      go to state 93
    expression  go to state 160
    const_expr  go to state 95
    func_call   go to state 96


State 129

   61 expression: expression MUL • expression

    ID          shift, and go to state 88
    INT_LIT     shift, and go to state 33
    REAL_LIT    shift, and go to state 34
    STRING_LIT  shift, and go to state 35
    BOOL_LIT    shift, and go to state 36
    PLUS        shift, and go to state 89
    MINUS       shift, and go to state 90
    NOT         shift, and go to state 91
    LPAREN      shift, and go to state 92

    lvalue      go to state 93
    expression  go to state 161
    const_expr  go to state 95
    func_call   go to state 96


State 130

   62 expression: expression DIV • expression

    ID          shift, and go to state 88
    INT_LIT     shift, and go to state 33
    REAL_LIT    shift, and go to state 34
    STRING_LIT  shift, and go to state 35
    BOOL_LIT    shift, and go to state 36
    PLUS        shift, and go to state 89
    MINUS       shift, and go to state 90
    NOT         shift, and go to state 91
    LPAREN      shift, and go to state 92

    lvalue      go to state 93
    expression  go to state 162
    const_expr  go to state 95
    func_call   go to state 96


State 131

   63 expression: expression MOD • expression

    ID          shift, and go to state 88
    INT_LIT     shift, and go to state 33
    REAL_LIT    shift, and go to state 34
    STRING_LIT  shift, and go to state 35
    BOOL_LIT    shift, and go to state 36
    PLUS        shift, and go to state 89
    MINUS       shift, and go to state 90
    NOT         shift, and go to state 91
    LPAREN      shift, and go to state 92

    lvalue      go to state 93
    expression  go to state 163
    const_expr  go to state 95
    func_call   go to state 96


State 132

   70 expression: expression AND • expression

    ID          shift, and go to state 88
    INT_LIT     shift, and go to state 33
    REAL_LIT    shift, and go to state 34
    STRING_LIT  shift, and go to state 35
    BOOL_LIT    shift, and go to state 36
    PLUS        shift, and go to state 89
    MINUS       shift, and go to state 90
    NOT         shift, and go to state 91
    LPAREN      shift, and go to state 92

    lvalue      go to state 93
    expression  go to state 164
    const_expr  go to state 95
    func_call   go to state 96


State 133

   71 expression: expression OR • expression

    ID          shift, and go to state 88
    INT_LIT     shift, and go to state 33
    REAL_LIT    shift, and go to state 34
    STRING_LIT  shift, and go to state 35
    BOOL_LIT    shift, and go to state 36
    PLUS        shift, and go to state 89
    MINUS       shift, and go to state 90
    NOT         shift, and go to state 91
    LPAREN      shift, and go to state 92

    lvalue      go to state 93
    expression  go to state 165
    const_expr  go to state 95
    func_call   go to state 96


State 134

   58 return_stmt: RETURN expression SEMICOLON •

    $default  reduce using rule 58 (return_stmt)


State 135

   37 simple_stmt: PRINT expression SEMICOLON •

    $default  reduce using rule 37 (simple_stmt)


State 136

   38 simple_stmt: PRINTLN expression SEMICOLON •

    $default  reduce using rule 38 (simple_stmt)


State 137

   39 simple_stmt: READ lvalue SEMICOLON •

    $default  reduce using rule 39 (simple_stmt)


State 138

   59 expression: expression • PLUS expression
   60           | expression • MINUS expression
   61           | expression • MUL expression
   62           | expression • DIV expression
   63           | expression • MOD expression
   64           | expression • LT expression
   65           | expression • LE expression
   66           | expression • GT expression
   67           | expression • GE expression
   68           | expression • EQ expression
   69           | expression • NEQ expression
   70           | expression • AND expression
   71           | expression • OR expression
   87 arg_list: expression •

    LE     shift, and go to state 121
    GE     shift, and go to state 122
    EQ     shift, and go to state 123
    NEQ    shift, and go to state 124
    LT     shift, and go to state 125
    GT     shift, and go to state 126
    PLUS   shift, and go to state 127
    MINUS  shift, and go to state 128
    MUL    shift, and go to state 129
    DIV    shift, and go to state 130
    MOD    shift, and go to state 131
    AND    shift, and go to state 132
    OR     shift, and go to state 133

    $default  reduce using rule 87 (arg_list)


State 139

   84 proc_call: ID LPAREN arg_list_opt • RPAREN

    RPAREN  shift, and go to state 166


State 140

   86 arg_list_opt: arg_list •
   88 arg_list: arg_list • COMMA expression

    COMMA  shift, and go to state 167

    $default  reduce using rule 86 (arg_list_opt)


State 141

   59 expression: expression • PLUS expression
   60           | expression • MINUS expression
   61           | expression • MUL expression
   62           | expression • DIV expression
   63           | expression • MOD expression
   64           | expression • LT expression
   65           | expression • LE expression
   66           | expression • GT expression
   67           | expression • GE expression
   68           | expression • EQ expression
   69           | expression • NEQ expression
   70           | expression • AND expression
   71           | expression • OR expression
   91 array_ref: LBRACK expression • RBRACK

    LE      shift, and go to state 121
    GE      shift, and go to state 122
    EQ      shift, and go to state 123
    NEQ     shift, and go to state 124
    LT      shift, and go to state 125
    GT      shift, and go to state 126
    PLUS    shift, and go to state 127
    MINUS   shift, and go to state 128
    MUL     shift, and go to state 129
    DIV     shift, and go to state 130
    MOD     shift, and go to state 131
    AND     shift, and go to state 132
    OR      shift, and go to state 133
    RBRACK  shift, and go to state 168


State 142

   92 array_ref: array_ref LBRACK • expression RBRACK

    ID          shift, and go to state 88
    INT_LIT     shift, and go to state 33
    REAL_LIT    shift, and go to state 34
    STRING_LIT  shift, and go to state 35
    BOOL_LIT    shift, and go to state 36
    PLUS        shift, and go to state 89
    MINUS       shift, and go to state 90
    NOT         shift, and go to state 91
    LPAREN      shift, and go to state 92

    lvalue      go to state 93
    expression  go to state 169
    const_expr  go to state 95
    func_call   go to state 96


State 143

   40 simple_stmt: INC lvalue SEMICOLON •

    $default  reduce using rule 40 (simple_stmt)


State 144

   41 simple_stmt: DEC lvalue SEMICOLON •

    $default  reduce using rule 41 (simple_stmt)


State 145

   43 assign_stmt: lvalue ASSIGN expression • SEMICOLON
   59 expression: expression • PLUS expression
   60           | expression • MINUS expression
   61           | expression • MUL expression
   62           | expression • DIV expression
   63           | expression • MOD expression
   64           | expression • LT expression
   65           | expression • LE expression
   66           | expression • GT expression
   67           | expression • GE expression
   68           | expression • EQ expression
   69           | expression • NEQ expression
   70           | expression • AND expression
   71           | expression • OR expression

    LE         shift, and go to state 121
    GE         shift, and go to state 122
    EQ         shift, and go to state 123
    NEQ        shift, and go to state 124
    LT         shift, and go to state 125
    GT         shift, and go to state 126
    PLUS       shift, and go to state 127
    MINUS      shift, and go to state 128
    MUL        shift, and go to state 129
    DIV        shift, and go to state 130
    MOD        shift, and go to state 131
    AND        shift, and go to state 132
    OR         shift, and go to state 133
    SEMICOLON  shift, and go to state 170


State 146

   46 if_stmt: IF LPAREN expression RPAREN • statement
   47        | IF LPAREN expression RPAREN • statement ELSE statement

    error      shift, and go to state 57
    IF         shift, and go to state 58
    WHILE      shift, and go to state 59
    FOR        shift, and go to state 60
    FOREACH    shift, and go to state 61
    RETURN     shift, and go to state 62
    PRINT      shift, and go to state 63
    PRINTLN    shift, and go to state 64
    READ       shift, and go to state 65
    ID         shift, and go to state 66
    INC        shift, and go to state 67
    DEC        shift, and go to state 68
    SEMICOLON  shift, and go to state 69
    LBRACE     shift, and go to state 50

    block        go to state 71
    statement    go to state 171
    simple_stmt  go to state 76
    assign_stmt  go to state 77
    lvalue       go to state 78
    if_stmt      go to state 79
    loop_stmt    go to state 80
    return_stmt  go to state 81
    proc_call    go to state 82


State 147

   48 loop_stmt: WHILE LPAREN expression RPAREN • statement

    error      shift, and go to state 57
    IF         shift, and go to state 58
    WHILE      shift, and go to state 59
    FOR        shift, and go to state 60
    FOREACH    shift, and go to state 61
    RETURN     shift, and go to state 62
    PRINT      shift, and go to state 63
    PRINTLN    shift, and go to state 64
    READ       shift, and go to state 65
    ID         shift, and go to state 66
    INC        shift, and go to state 67
    DEC        shift, and go to state 68
    SEMICOLON  shift, and go to state 69
    LBRACE     shift, and go to state 50

    block        go to state 71
    statement    go to state 172
    simple_stmt  go to state 76
    assign_stmt  go to state 77
    lvalue       go to state 78
    if_stmt      go to state 79
    loop_stmt    go to state 80
    return_stmt  go to state 81
    proc_call    go to state 82


State 148

   57 assign_no_semi: lvalue ASSIGN • expression

    ID          shift, and go to state 88
    INT_LIT     shift, and go to state 33
    REAL_LIT    shift, and go to state 34
    STRING_LIT  shift, and go to state 35
    BOOL_LIT    shift, and go to state 36
    PLUS        shift, and go to state 89
    MINUS       shift, and go to state 90
    NOT         shift, and go to state 91
    LPAREN      shift, and go to state 92

    lvalue      go to state 93
    expression  go to state 173
    const_expr  go to state 95
    func_call   go to state 96


State 149

   49 loop_stmt: FOR LPAREN for_start_opt SEMICOLON • expression SEMICOLON for_update_opt RPAREN statement

    ID          shift, and go to state 88
    INT_LIT     shift, and go to state 33
    REAL_LIT    shift, and go to state 34
    STRING_LIT  shift, and go to state 35
    BOOL_LIT    shift, and go to state 36
    PLUS        shift, and go to state 89
    MINUS       shift, and go to state 90
    NOT         shift, and go to state 91
    LPAREN      shift, and go to state 92

    lvalue      go to state 93
    expression  go to state 174
    const_expr  go to state 95
    func_call   go to state 96


State 150

   50 loop_stmt: FOREACH LPAREN ID COLON • INT_LIT DOT DOT INT_LIT RPAREN statement

    INT_LIT  shift, and go to state 175


State 151

   83 func_call: ID LPAREN arg_list_opt • RPAREN

    RPAREN  shift, and go to state 176


State 152

   75 expression: LPAREN expression RPAREN •

    $default  reduce using rule 75 (expression)


State 153

   59 expression: expression • PLUS expression
   60           | expression • MINUS expression
   61           | expression • MUL expression
   62           | expression • DIV expression
   63           | expression • MOD expression
   64           | expression • LT expression
   65           | expression • LE expression
   65           | expression LE expression •
   66           | expression • GT expression
   67           | expression • GE expression
   68           | expression • EQ expression
   69           | expression • NEQ expression
   70           | expression • AND expression
   71           | expression • OR expression

    EQ   shift, and go to state 123
    NEQ  shift, and go to state 124
    AND  shift, and go to state 132
    OR   shift, and go to state 133

    LE  error (nonassociative)
    GE  error (nonassociative)
    LT  error (nonassociative)
    GT  error (nonassociative)

    $default  reduce using rule 65 (expression)


State 154

   59 expression: expression • PLUS expression
   60           | expression • MINUS expression
   61           | expression • MUL expression
   62           | expression • DIV expression
   63           | expression • MOD expression
   64           | expression • LT expression
   65           | expression • LE expression
   66           | expression • GT expression
   67           | expression • GE expression
   67           | expression GE expression •
   68           | expression • EQ expression
   69           | expression • NEQ expression
   70           | expression • AND expression
   71           | expression • OR expression

    EQ   shift, and go to state 123
    NEQ  shift, and go to state 124
    AND  shift, and go to state 132
    OR   shift, and go to state 133

    LE  error (nonassociative)
    GE  error (nonassociative)
    LT  error (nonassociative)
    GT  error (nonassociative)

    $default  reduce using rule 67 (expression)


State 155

   59 expression: expression • PLUS expression
   60           | expression • MINUS expression
   61           | expression • MUL expression
   62           | expression • DIV expression
   63           | expression • MOD expression
   64           | expression • LT expression
   65           | expression • LE expression
   66           | expression • GT expression
   67           | expression • GE expression
   68           | expression • EQ expression
   68           | expression EQ expression •
   69           | expression • NEQ expression
   70           | expression • AND expression
   71           | expression • OR expression

    AND  shift, and go to state 132
    OR   shift, and go to state 133

    EQ   error (nonassociative)
    NEQ  error (nonassociative)

    $default  reduce using rule 68 (expression)


State 156

   59 expression: expression • PLUS expression
   60           | expression • MINUS expression
   61           | expression • MUL expression
   62           | expression • DIV expression
   63           | expression • MOD expression
   64           | expression • LT expression
   65           | expression • LE expression
   66           | expression • GT expression
   67           | expression • GE expression
   68           | expression • EQ expression
   69           | expression • NEQ expression
   69           | expression NEQ expression •
   70           | expression • AND expression
   71           | expression • OR expression

    AND  shift, and go to state 132
    OR   shift, and go to state 133

    EQ   error (nonassociative)
    NEQ  error (nonassociative)

    $default  reduce using rule 69 (expression)


State 157

   59 expression: expression • PLUS expression
   60           | expression • MINUS expression
   61           | expression • MUL expression
   62           | expression • DIV expression
   63           | expression • MOD expression
   64           | expression • LT expression
   64           | expression LT expression •
   65           | expression • LE expression
   66           | expression • GT expression
   67           | expression • GE expression
   68           | expression • EQ expression
   69           | expression • NEQ expression
   70           | expression • AND expression
   71           | expression • OR expression

    EQ   shift, and go to state 123
    NEQ  shift, and go to state 124
    AND  shift, and go to state 132
    OR   shift, and go to state 133

    LE  error (nonassociative)
    GE  error (nonassociative)
    LT  error (nonassociative)
    GT  error (nonassociative)

    $default  reduce using rule 64 (expression)


State 158

   59 expression: expression • PLUS expression
   60           | expression • MINUS expression
   61           | expression • MUL expression
   62           | expression • DIV expression
   63           | expression • MOD expression
   64           | expression • LT expression
   65           | expression • LE expression
   66           | expression • GT expression
   66           | expression GT expression •
   67           | expression • GE expression
   68           | expression • EQ expression
   69           | expression • NEQ expression
   70           | expression • AND expression
   71           | expression • OR expression

    EQ   shift, and go to state 123
    NEQ  shift, and go to state 124
    AND  shift, and go to state 132
    OR   shift, and go to state 133

    LE  error (nonassociative)
    GE  error (nonassociative)
    LT  error (nonassociative)
    GT  error (nonassociative)

    $default  reduce using rule 66 (expression)


State 159

   59 expression: expression • PLUS expression
   59           | expression PLUS expression •
   60           | expression • MINUS expression
   61           | expression • MUL expression
   62           | expression • DIV expression
   63           | expression • MOD expression
   64           | expression • LT expression
   65           | expression • LE expression
   66           | expression • GT expression
   67           | expression • GE expression
   68           | expression • EQ expression
   69           | expression • NEQ expression
   70           | expression • AND expression
   71           | expression • OR expression

    LE   shift, and go to state 121
    GE   shift, and go to state 122
    EQ   shift, and go to state 123
    NEQ  shift, and go to state 124
    LT   shift, and go to state 125
    GT   shift, and go to state 126
    AND  shift, and go to state 132
    OR   shift, and go to state 133

    $default  reduce using rule 59 (expression)


State 160

   59 expression: expression • PLUS expression
   60           | expression • MINUS expression
   60           | expression MINUS expression •
   61           | expression • MUL expression
   62           | expression • DIV expression
   63           | expression • MOD expression
   64           | expression • LT expression
   65           | expression • LE expression
   66           | expression • GT expression
   67           | expression • GE expression
   68           | expression • EQ expression
   69           | expression • NEQ expression
   70           | expression • AND expression
   71           | expression • OR expression

    LE   shift, and go to state 121
    GE   shift, and go to state 122
    EQ   shift, and go to state 123
    NEQ  shift, and go to state 124
    LT   shift, and go to state 125
    GT   shift, and go to state 126
    AND  shift, and go to state 132
    OR   shift, and go to state 133

    $default  reduce using rule 60 (expression)


State 161

   59 expression: expression • PLUS expression
   60           | expression • MINUS expression
   61           | expression • MUL expression
   61           | expression MUL expression •
   62           | expression • DIV expression
   63           | expression • MOD expression
   64           | expression • LT expression
   65           | expression • LE expression
   66           | expression • GT expression
   67           | expression • GE expression
   68           | expression • EQ expression
   69           | expression • NEQ expression
   70           | expression • AND expression
   71           | expression • OR expression

    LE     shift, and go to state 121
    GE     shift, and go to state 122
    EQ     shift, and go to state 123
    NEQ    shift, and go to state 124
    LT     shift, and go to state 125
    GT     shift, and go to state 126
    PLUS   shift, and go to state 127
    MINUS  shift, and go to state 128
    AND    shift, and go to state 132
    OR     shift, and go to state 133

    $default  reduce using rule 61 (expression)


State 162

   59 expression: expression • PLUS expression
   60           | expression • MINUS expression
   61           | expression • MUL expression
   62           | expression • DIV expression
   62           | expression DIV expression •
   63           | expression • MOD expression
   64           | expression • LT expression
   65           | expression • LE expression
   66           | expression • GT expression
   67           | expression • GE expression
   68           | expression • EQ expression
   69           | expression • NEQ expression
   70           | expression • AND expression
   71           | expression • OR expression

    LE     shift, and go to state 121
    GE     shift, and go to state 122
    EQ     shift, and go to state 123
    NEQ    shift, and go to state 124
    LT     shift, and go to state 125
    GT     shift, and go to state 126
    PLUS   shift, and go to state 127
    MINUS  shift, and go to state 128
    AND    shift, and go to state 132
    OR     shift, and go to state 133

    $default  reduce using rule 62 (expression)


State 163

   59 expression: expression • PLUS expression
   60           | expression • MINUS expression
   61           | expression • MUL expression
   62           | expression • DIV expression
   63           | expression • MOD expression
   63           | expression MOD expression •
   64           | expression • LT expression
   65           | expression • LE expression
   66           | expression • GT expression
   67           | expression • GE expression
   68           | expression • EQ expression
   69           | expression • NEQ expression
   70           | expression • AND expression
   71           | expression • OR expression

    LE     shift, and go to state 121
    GE     shift, and go to state 122
    EQ     shift, and go to state 123
    NEQ    shift, and go to state 124
    LT     shift, and go to state 125
    GT     shift, and go to state 126
    PLUS   shift, and go to state 127
    MINUS  shift, and go to state 128
    AND    shift, and go to state 132
    OR     shift, and go to state 133

    $default  reduce using rule 63 (expression)


State 164

   59 expression: expression • PLUS expression
   60           | expression • MINUS expression
   61           | expression • MUL expression
   62           | expression • DIV expression
   63           | expression • MOD expression
   64           | expression • LT expression
   65           | expression • LE expression
   66           | expression • GT expression
   67           | expression • GE expression
   68           | expression • EQ expression
   69           | expression • NEQ expression
   70           | expression • AND expression
   70           | expression AND expression •
   71           | expression • OR expression

    OR  shift, and go to state 133

    $default  reduce using rule 70 (expression)


State 165

   59 expression: expression • PLUS expression
   60           | expression • MINUS expression
   61           | expression • MUL expression
   62           | expression • DIV expression
   63           | expression • MOD expression
   64           | expression • LT expression
   65           | expression • LE expression
   66           | expression • GT expression
   67           | expression • GE expression
   68           | expression • EQ expression
   69           | expression • NEQ expression
   70           | expression • AND expression
   71           | expression • OR expression
   71           | expression OR expression •

    $default  reduce using rule 71 (expression)


State 166

   84 proc_call: ID LPAREN arg_list_opt RPAREN •

    $default  reduce using rule 84 (proc_call)


State 167

   88 arg_list: arg_list COMMA • expression

    ID          shift, and go to state 88
    INT_LIT     shift, and go to state 33
    REAL_LIT    shift, and go to state 34
    STRING_LIT  shift, and go to state 35
    BOOL_LIT    shift, and go to state 36
    PLUS        shift, and go to state 89
    MINUS       shift, and go to state 90
    NOT         shift, and go to state 91
    LPAREN      shift, and go to state 92

    lvalue      go to state 93
    expression  go to state 177
    const_expr  go to state 95
    func_call   go to state 96


State 168

   91 array_ref: LBRACK expression RBRACK •

    $default  reduce using rule 91 (array_ref)


State 169

   59 expression: expression • PLUS expression
   60           | expression • MINUS expression
   61           | expression • MUL expression
   62           | expression • DIV expression
   63           | expression • MOD expression
   64           | expression • LT expression
   65           | expression • LE expression
   66           | expression • GT expression
   67           | expression • GE expression
   68           | expression • EQ expression
   69           | expression • NEQ expression
   70           | expression • AND expression
   71           | expression • OR expression
   92 array_ref: array_ref LBRACK expression • RBRACK

    LE      shift, and go to state 121
    GE      shift, and go to state 122
    EQ      shift, and go to state 123
    NEQ     shift, and go to state 124
    LT      shift, and go to state 125
    GT      shift, and go to state 126
    PLUS    shift, and go to state 127
    MINUS   shift, and go to state 128
    MUL     shift, and go to state 129
    DIV     shift, and go to state 130
    MOD     shift, and go to state 131
    AND     shift, and go to state 132
    OR      shift, and go to state 133
    RBRACK  shift, and go to state 178


State 170

   43 assign_stmt: lvalue ASSIGN expression SEMICOLON •

    $default  reduce using rule 43 (assign_stmt)


State 171

   46 if_stmt: IF LPAREN expression RPAREN statement •
   47        | IF LPAREN expression RPAREN statement • ELSE statement

    ELSE  shift, and go to state 179

    ELSE      [reduce using rule 46 (if_stmt)]
    $default  reduce using rule 46 (if_stmt)


State 172

   48 loop_stmt: WHILE LPAREN expression RPAREN statement •

    $default  reduce using rule 48 (loop_stmt)


State 173

   57 assign_no_semi: lvalue ASSIGN expression •
   59 expression: expression • PLUS expression
   60           | expression • MINUS expression
   61           | expression • MUL expression
   62           | expression • DIV expression
   63           | expression • MOD expression
   64           | expression • LT expression
   65           | expression • LE expression
   66           | expression • GT expression
   67           | expression • GE expression
   68           | expression • EQ expression
   69           | expression • NEQ expression
   70           | expression • AND expression
   71           | expression • OR expression

    LE     shift, and go to state 121
    GE     shift, and go to state 122
    EQ     shift, and go to state 123
    NEQ    shift, and go to state 124
    LT     shift, and go to state 125
    GT     shift, and go to state 126
    PLUS   shift, and go to state 127
    MINUS  shift, and go to state 128
    MUL    shift, and go to state 129
    DIV    shift, and go to state 130
    MOD    shift, and go to state 131
    AND    shift, and go to state 132
    OR     shift, and go to state 133

    $default  reduce using rule 57 (assign_no_semi)


State 174

   49 loop_stmt: FOR LPAREN for_start_opt SEMICOLON expression • SEMICOLON for_update_opt RPAREN statement
   59 expression: expression • PLUS expression
   60           | expression • MINUS expression
   61           | expression • MUL expression
   62           | expression • DIV expression
   63           | expression • MOD expression
   64           | expression • LT expression
   65           | expression • LE expression
   66           | expression • GT expression
   67           | expression • GE expression
   68           | expression • EQ expression
   69           | expression • NEQ expression
   70           | expression • AND expression
   71           | expression • OR expression

    LE         shift, and go to state 121
    GE         shift, and go to state 122
    EQ         shift, and go to state 123
    NEQ        shift, and go to state 124
    LT         shift, and go to state 125
    GT         shift, and go to state 126
    PLUS       shift, and go to state 127
    MINUS      shift, and go to state 128
    MUL        shift, and go to state 129
    DIV        shift, and go to state 130
    MOD        shift, and go to state 131
    AND        shift, and go to state 132
    OR         shift, and go to state 133
    SEMICOLON  shift, and go to state 180


State 175

   50 loop_stmt: FOREACH LPAREN ID COLON INT_LIT • DOT DOT INT_LIT RPAREN statement

    DOT  shift, and go to state 181


State 176

   83 func_call: ID LPAREN arg_list_opt RPAREN •

    $default  reduce using rule 83 (func_call)


State 177

   59 expression: expression • PLUS expression
   60           | expression • MINUS expression
   61           | expression • MUL expression
   62           | expression • DIV expression
   63           | expression • MOD expression
   64           | expression • LT expression
   65           | expression • LE expression
   66           | expression • GT expression
   67           | expression • GE expression
   68           | expression • EQ expression
   69           | expression • NEQ expression
   70           | expression • AND expression
   71           | expression • OR expression
   88 arg_list: arg_list COMMA expression •

    LE     shift, and go to state 121
    GE     shift, and go to state 122
    EQ     shift, and go to state 123
    NEQ    shift, and go to state 124
    LT     shift, and go to state 125
    GT     shift, and go to state 126
    PLUS   shift, and go to state 127
    MINUS  shift, and go to state 128
    MUL    shift, and go to state 129
    DIV    shift, and go to state 130
    MOD    shift, and go to state 131
    AND    shift, and go to state 132
    OR     shift, and go to state 133

    $default  reduce using rule 88 (arg_list)


State 178

   92 array_ref: array_ref LBRACK expression RBRACK •

    $default  reduce using rule 92 (array_ref)


State 179

   47 if_stmt: IF LPAREN expression RPAREN statement ELSE • statement

    error      shift, and go to state 57
    IF         shift, and go to state 58
    WHILE      shift, and go to state 59
    FOR        shift, and go to state 60
    FOREACH    shift, and go to state 61
    RETURN     shift, and go to state 62
    PRINT      shift, and go to state 63
    PRINTLN    shift, and go to state 64
    READ       shift, and go to state 65
    ID         shift, and go to state 66
    INC        shift, and go to state 67
    DEC        shift, and go to state 68
    SEMICOLON  shift, and go to state 69
    LBRACE     shift, and go to state 50

    block        go to state 71
    statement    go to state 182
    simple_stmt  go to state 76
    assign_stmt  go to state 77
    lvalue       go to state 78
    if_stmt      go to state 79
    loop_stmt    go to state 80
    return_stmt  go to state 81
    proc_call    go to state 82


State 180

   49 loop_stmt: FOR LPAREN for_start_opt SEMICOLON expression SEMICOLON • for_update_opt RPAREN statement

    ID  shift, and go to state 99

    $default  reduce using rule 53 (for_update_opt)

    lvalue          go to state 183
    for_update_opt  go to state 184
    assign_no_semi  go to state 185


State 181

   50 loop_stmt: FOREACH LPAREN ID COLON INT_LIT DOT • DOT INT_LIT RPAREN statement

    DOT  shift, and go to state 186


State 182

   47 if_stmt: IF LPAREN expression RPAREN statement ELSE statement •

    $default  reduce using rule 47 (if_stmt)


State 183

   55 for_update_opt: lvalue • INC
   56               | lvalue • DEC
   57 assign_no_semi: lvalue • ASSIGN expression

    ASSIGN  shift, and go to state 148
    INC     shift, and go to state 187
    DEC     shift, and go to state 188


State 184

   49 loop_stmt: FOR LPAREN for_start_opt SEMICOLON expression SEMICOLON for_update_opt • RPAREN statement

    RPAREN  shift, and go to state 189


State 185

   54 for_update_opt: assign_no_semi •

    $default  reduce using rule 54 (for_update_opt)


State 186

   50 loop_stmt: FOREACH LPAREN ID COLON INT_LIT DOT DOT • INT_LIT RPAREN statement

    INT_LIT  shift, and go to state 190


State 187

   55 for_update_opt: lvalue INC •

    $default  reduce using rule 55 (for_update_opt)


State 188

   56 for_update_opt: lvalue DEC •

    $default  reduce using rule 56 (for_update_opt)


State 189

   49 loop_stmt: FOR LPAREN for_start_opt SEMICOLON expression SEMICOLON for_update_opt RPAREN • statement

    error      shift, and go to state 57
    IF         shift, and go to state 58
    WHILE      shift, and go to state 59
    FOR        shift, and go to state 60
    FOREACH    shift, and go to state 61
    RETURN     shift, and go to state 62
    PRINT      shift, and go to state 63
    PRINTLN    shift, and go to state 64
    READ       shift, and go to state 65
    ID         shift, and go to state 66
    INC        shift, and go to state 67
    DEC        shift, and go to state 68
    SEMICOLON  shift, and go to state 69
    LBRACE     shift, and go to state 50

    block        go to state 71
    statement    go to state 191
    simple_stmt  go to state 76
    assign_stmt  go to state 77
    lvalue       go to state 78
    if_stmt      go to state 79
    loop_stmt    go to state 80
    return_stmt  go to state 81
    proc_call    go to state 82


State 190

   50 loop_stmt: FOREACH LPAREN ID COLON INT_LIT DOT DOT INT_LIT • RPAREN statement

    RPAREN  shift, and go to state 192


State 191

   49 loop_stmt: FOR LPAREN for_start_opt SEMICOLON expression SEMICOLON for_update_opt RPAREN statement •

    $default  reduce using rule 49 (loop_stmt)


State 192

   50 loop_stmt: FOREACH LPAREN ID COLON INT_LIT DOT DOT INT_LIT RPAREN • statement

    error      shift, and go to state 57
    IF         shift, and go to state 58
    WHILE      shift, and go to state 59
    FOR        shift, and go to state 60
    FOREACH    shift, and go to state 61
    RETURN     shift, and go to state 62
    PRINT      shift, and go to state 63
    PRINTLN    shift, and go to state 64
    READ       shift, and go to state 65
    ID         shift, and go to state 66
    INC        shift, and go to state 67
    DEC        shift, and go to state 68
    SEMICOLON  shift, and go to state 69
    LBRACE     shift, and go to state 50

    block        go to state 71
    statement    go to state 193
    simple_stmt  go to state 76
    assign_stmt  go to state 77
    lvalue       go to state 78
    if_stmt      go to state 79
    loop_stmt    go to state 80
    return_stmt  go to state 81
    proc_call    go to state 82


State 193

   50 loop_stmt: FOREACH LPAREN ID COLON INT_LIT DOT DOT INT_LIT RPAREN statement •

    $default  reduce using rule 50 (loop_stmt)
